<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
<> User: vv2trainee17

Host: compute-srv2.eda.atme.in

Report date: Sat 23 Mar 2019 11:06:53 IST

Report options: -detail -text -out cov_report.txt -all

Coverage database path: /home/vv2trainee17/Desktop/Suhas/counter/new/cov_work/scope/cov_merged_output

Coverage model files: /home/vv2trainee17/Desktop/Suhas/counter/new/cov_work/scope/cov_merged_output/icc_756898ef_695c2850.ucm

Coverage data files: /home/vv2trainee17/Desktop/Suhas/counter/new/cov_work/scope/cov_merged_output/icc_756898ef_695c2850.ucd

CCF files:  /home/vv2trainee17/Desktop/Suhas/counter/new/cov_files/cov_cmd.cf
    set_covergroup -new_instance_reporting
    set_covergroup -per_instance_default_one
    set_implicit_block_scoring -off
    set_assign_scoring
    set_expr_scoring -all
    select_functional


Coverage database date: Sat 23 Mar 2019 11:04:53 IST

*** There were no refinement files applied ***

  <>
<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>

Coverage Table Legend
---------------------
  EXCL   excluded using refinement rule
  P-EXCL excluded from parent
  U-EXCL excluded and unreachable by IEV
  T-EXCL excluded from type
  S-EXCL smart excluded using refinement rule
  EXCL(S) smart indirect excluded
  EMPTY  all children are excluded
  CONST  marked constant during simulation
  IGN    marked ignored during simulation
  UNG    marked ungradeable during simulation
  DES    marked deselected during simulation
  UNR    marked unreachable by IEV


Covered+Uncovered+Excluded+UNR Block Detail Report, Instance Based
==================================================================

Instance name: async_fifo
Type name: async_fifo
File name: /home/vv2trainee17/Desktop/Suhas/counter/new/AFIFO1.sv
Number of covered blocks: 23 of 23
Number of uncovered blocks: 0 of 23
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     33    code block           33     always @(posedge wr_clk or posedge rst) begin 
1      2     34    true part of         34     if (rst) begin                 
1      3     38    false part of        34     end else if (wr_en && !full) begin 
1      4     38    true part of         38     end else if (wr_en && !full) begin 
1      5     43    code block           43     full <= (count == DEPTH);              // Update full flag 
1      6     47    code block           47     always @(posedge wr_clk or posedge rst) begin 
1      7     48    true part of         48     if (rst) begin                 
1      8     50    false part of        48     end else if (wr_en && full) begin      // Overflow when writing to full FIFO 
1      9     50    true part of         50     end else if (wr_en && full) begin      // Overflow when writing to full FIFO 
1      10    52    false part of        50     end else begin                 
1      11    58    code block           58     always @(posedge rd_clk or posedge rst) begin 
1      12    59    true part of         59     if (rst) begin                 
1      13    63    false part of        59     end else if (rd_en && !empty) begin 
1      14    63    true part of         63     end else if (rd_en && !empty) begin 
1      15    68    code block           68     empty <= (count == 0);                 // Update empty flag 
1      16    72    code block           72     always @(posedge rd_clk or posedge rst) begin 
1      17    73    true part of         73     if (rst) begin                 
1      18    75    false part of        73     end else if (rd_en && empty) begin     // Underflow when reading from empty FIFO 
1      19    75    true part of         75     end else if (rd_en && empty) begin     // Underflow when reading from empty FIFO 
1      20    77    false part of        75     end else begin                 
1      21    82    code block           82     always @(posedge rd_clk or posedge rst) begin 
1      22    83    true part of         83     if (rst) begin                 
1      23    86    false part of        83     begin                          

Covered+Uncovered+Excluded+UNR Expression Detail Report, Instance Based
=======================================================================

Expression coverage Table Legend
---------------------
  -      don't care
  e      event for event-or expressions
  O (odd), E (even), B (both), X (not scored),
         I (marked ignore) for parity trees
  Y (covered), N (not covered), C (constant), 
  P (one or more inputs for this bit have been padded) for vector scoring, 
  d=== , b=== shows which bit differs in vector scoring 
  rval   Resulting value of the expression for coverage purposes given
         the input values
  <-n->  Shows the n-th term composition


Instance name: async_fifo
Type name: async_fifo
File name: /home/vv2trainee17/Desktop/Suhas/counter/new/AFIFO1.sv
Number of covered expressions: 16 of 16
Number of uncovered expressions: 0 of 16
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 100.00% (3/3) | 38     | wr_en && (! full)                                  
2.1    | 100.00% (2/2) | 43     | count == DEPTH                                     
3.1    | 100.00% (3/3) | 50     | wr_en && full                                      
4.1    | 100.00% (3/3) | 63     | rd_en && (! empty)                                 
5.1    | 100.00% (2/2) | 68     | count == 0                                         
6.1    | 100.00% (3/3) | 75     | rd_en && empty                                     

index: 1.1 grade: 100.00% (3/3) line: 38 source: end else if (wr_en && !full) begin

wr_en && (! full)
<-1->       <2->

index     | hit   | rval | <1> <2> 
-----------------------------------
1.1.1     | 1     | 1    | 1   0   
1.1.2     | 1     | 0    | -   1   
1.1.3     | 1     | 0    | 0   -   

index: 2.1 grade: 100.00% (2/2) line: 43 source: full <= (count == DEPTH);              // Update full flag

count == DEPTH
<-1->    <-2->

index     | hit   | <1>   <2>   
-------------------------------- '=='
2.1.1     | 1     | lhs == rhs  
2.1.2     | 1     | lhs != rhs  

index: 3.1 grade: 100.00% (3/3) line: 50 source: end else if (wr_en && full) begin      // Overflow when writing to full FIFO

wr_en && full
<-1->    <2->

index     | hit   | <1> <2> 
---------------------------- '&&'
3.1.1     | 1     | 0   -   
3.1.2     | 1     | -   0   
3.1.3     | 1     | 1   1   

index: 4.1 grade: 100.00% (3/3) line: 63 source: end else if (rd_en && !empty) begin

rd_en && (! empty)
<-1->       <-2->

index     | hit   | rval | <1> <2> 
-----------------------------------
4.1.1     | 1     | 1    | 1   0   
4.1.2     | 1     | 0    | -   1   
4.1.3     | 1     | 0    | 0   -   

index: 5.1 grade: 100.00% (2/2) line: 68 source: empty <= (count == 0);                 // Update empty flag

count == 0
<-1->    <2>

index     | hit   | <1>   <2>   
-------------------------------- '=='
5.1.1     | 1     | lhs == rhs  
5.1.2     | 1     | lhs != rhs  

index: 6.1 grade: 100.00% (3/3) line: 75 source: end else if (rd_en && empty) begin     // Underflow when reading from empty FIFO

rd_en && empty
<-1->    <-2->

index     | hit   | <1> <2> 
---------------------------- '&&'
6.1.1     | 1     | 0   -   
6.1.2     | 1     | -   0   
6.1.3     | 1     | 1   1   


Covered+Uncovered+Excluded+UNR Toggle Detail Report, Instance Based
===================================================================

Instance name: async_fifo
Type name: async_fifo
File name: /home/vv2trainee17/Desktop/Suhas/counter/new/AFIFO1.sv
Number of covered signal bits: 30 of 41
Number of uncovered signal bits: 11 of 41
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 2 of 41
Number of signal bits partially toggled(fall): 1 of 41

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
1          1          1          wr_clk                    
1          1          1          rd_clk                    
0          0          1          rst                       
1          1          1          wr_en                     
1          1          1          rd_en                     
0          0          0          din[7]                    
0          0          0          din[6]                    
0          0          0          din[5]                    
0          1          0          din[4]                    
1          1          1          din[3]                    
1          1          1          din[2]                    
1          1          1          din[1]                    
1          1          1          din[0]                    
0          0          0          dout[7]                   
0          0          0          dout[6]                   
0          0          0          dout[5]                   
0          1          0          dout[4]                   
1          1          1          dout[3]                   
1          1          1          dout[2]                   
1          1          1          dout[1]                   
1          1          1          dout[0]                   
1          1          1          full                      
1          1          1          empty                     
1          1          1          overflow                  
1          1          1          underflow                 
1          1          1          underflow_r               
0          0          0          wr_ptr[4]                 
1          1          1          wr_ptr[3]                 
1          1          1          wr_ptr[2]                 
1          1          1          wr_ptr[1]                 
1          1          1          wr_ptr[0]                 
0          0          0          rd_ptr[4]                 
1          1          1          rd_ptr[3]                 
1          1          1          rd_ptr[2]                 
1          1          1          rd_ptr[1]                 
1          1          1          rd_ptr[0]                 
1          1          1          count[4]                  
1          1          1          count[3]                  
1          1          1          count[2]                  
1          1          1          count[1]                  
1          1          1          count[0]                  

Covered+Uncovered+Excluded+UNR Fsm Detail Report, Instance Based
================================================================

Covered+Uncovered+Excluded+UNR Assertion Detail Report, Instance Based
======================================================================

Covered+Uncovered+Excluded+UNR CoverGroup Detail Report, Instance Based
=======================================================================

